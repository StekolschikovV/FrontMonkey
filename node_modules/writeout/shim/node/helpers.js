/**
 * @module helpers
 * @returns {Promise}
 */

'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fs = require('fs');
var co = require('co');

var isStream = function isStream(content) {
  return typeof content !== 'string' && !!content.pipe;
};

function hasDuplicate(filename, content) {
  return co(_regenerator2.default.mark(function _callee() {
    var exists, existing;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!isStream(content)) {
              _context.next = 2;
              break;
            }

            return _context.abrupt('return', false);

          case 2:
            _context.next = 4;
            return new _promise2.default(function (resolve) {
              return fs.exists(filename, function (exists) {
                return resolve(exists);
              });
            });

          case 4:
            exists = _context.sent;

            if (exists) {
              _context.next = 7;
              break;
            }

            return _context.abrupt('return', false);

          case 7:
            _context.next = 9;
            return new _promise2.default(function (resolve, reject) {
              return fs.readFile(filename, function (err, content) {
                return err ? reject(err) : resolve(content);
              });
            });

          case 9:
            existing = _context.sent;
            return _context.abrupt('return', String(existing) === String(content));

          case 11:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
}

module.exports = { hasDuplicate: hasDuplicate, isStream: isStream };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwiY28iLCJpc1N0cmVhbSIsImNvbnRlbnQiLCJwaXBlIiwiaGFzRHVwbGljYXRlIiwiZmlsZW5hbWUiLCJyZXNvbHZlIiwiZXhpc3RzIiwicmVqZWN0IiwicmVhZEZpbGUiLCJlcnIiLCJleGlzdGluZyIsIlN0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUtBOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDtBQUNBLElBQU1DLEtBQUtELFFBQVEsSUFBUixDQUFYOztBQUVBLElBQU1FLFdBQVcsU0FBWEEsUUFBVyxDQUFDQyxPQUFEO0FBQUEsU0FBYSxPQUFPQSxPQUFQLEtBQW1CLFFBQW5CLElBQStCLENBQUMsQ0FBQ0EsUUFBUUMsSUFBdEQ7QUFBQSxDQUFqQjs7QUFFQSxTQUFTQyxZQUFULENBQXVCQyxRQUF2QixFQUFpQ0gsT0FBakMsRUFBMEM7QUFDeEMsU0FBT0YsOEJBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQ0pDLFNBQVNDLE9BQVQsQ0FESTtBQUFBO0FBQUE7QUFBQTs7QUFBQSw2Q0FFQyxLQUZEOztBQUFBO0FBQUE7QUFBQSxtQkFJVyxzQkFBWSxVQUFDSSxPQUFEO0FBQUEscUJBQzdCUixHQUFHUyxNQUFILENBQVVGLFFBQVYsRUFBb0IsVUFBQ0UsTUFBRDtBQUFBLHVCQUFZRCxRQUFRQyxNQUFSLENBQVo7QUFBQSxlQUFwQixDQUQ2QjtBQUFBLGFBQVosQ0FKWDs7QUFBQTtBQUlKQSxrQkFKSTs7QUFBQSxnQkFPSEEsTUFQRztBQUFBO0FBQUE7QUFBQTs7QUFBQSw2Q0FRQyxLQVJEOztBQUFBO0FBQUE7QUFBQSxtQkFVYSxzQkFBWSxVQUFDRCxPQUFELEVBQVVFLE1BQVY7QUFBQSxxQkFDL0JWLEdBQUdXLFFBQUgsQ0FBWUosUUFBWixFQUFzQixVQUFDSyxHQUFELEVBQU1SLE9BQU47QUFBQSx1QkFDcEJRLE1BQU1GLE9BQU9FLEdBQVAsQ0FBTixHQUFvQkosUUFBUUosT0FBUixDQURBO0FBQUEsZUFBdEIsQ0FEK0I7QUFBQSxhQUFaLENBVmI7O0FBQUE7QUFVSlMsb0JBVkk7QUFBQSw2Q0FlREMsT0FBT0QsUUFBUCxNQUFxQkMsT0FBT1YsT0FBUCxDQWZwQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFILEVBQVA7QUFpQkQ7O0FBRURXLE9BQU9DLE9BQVAsR0FBaUIsRUFBRVYsMEJBQUYsRUFBZ0JILGtCQUFoQixFQUFqQiIsImZpbGUiOiJoZWxwZXJzLmpzIiwic291cmNlUm9vdCI6ImxpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSBoZWxwZXJzXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG5jb25zdCBjbyA9IHJlcXVpcmUoJ2NvJylcblxuY29uc3QgaXNTdHJlYW0gPSAoY29udGVudCkgPT4gdHlwZW9mIGNvbnRlbnQgIT09ICdzdHJpbmcnICYmICEhY29udGVudC5waXBlXG5cbmZ1bmN0aW9uIGhhc0R1cGxpY2F0ZSAoZmlsZW5hbWUsIGNvbnRlbnQpIHtcbiAgcmV0dXJuIGNvKGZ1bmN0aW9uICogKCkge1xuICAgIGlmIChpc1N0cmVhbShjb250ZW50KSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICAgIGxldCBleGlzdHMgPSB5aWVsZCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT5cbiAgICAgIGZzLmV4aXN0cyhmaWxlbmFtZSwgKGV4aXN0cykgPT4gcmVzb2x2ZShleGlzdHMpKVxuICAgIClcbiAgICBpZiAoIWV4aXN0cykge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICAgIGxldCBleGlzdGluZyA9IHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+XG4gICAgICBmcy5yZWFkRmlsZShmaWxlbmFtZSwgKGVyciwgY29udGVudCkgPT5cbiAgICAgICAgZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKGNvbnRlbnQpXG4gICAgICApXG4gICAgKVxuICAgIHJldHVybiBTdHJpbmcoZXhpc3RpbmcpID09PSBTdHJpbmcoY29udGVudClcbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7IGhhc0R1cGxpY2F0ZSwgaXNTdHJlYW0gfVxuIl19